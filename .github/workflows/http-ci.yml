# shenyu-dist/shenyu-admin-dist 打包成docker
# bbbb 打好了 integrated-http-test, 这个是网关
# 准备 http 后台，使用examples-http, 将 examples-http 构建成 docker 镜像
# mvn test

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: ci

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        plugin: [http, dubbo]
    runs-on: ${{ matrix.os, matrix.plugin }}
    steps:
      - name: Support longpaths
        if: ${{ matrix.os == 'windows-latest'}}
        run: git config --system core.longpaths true
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set Skip Env Var
        uses: ./.github/actions/skip-ci
      - name: Cache Maven Repos
        if: env.SKIP_CI != 'true'
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: actions/setup-java@v1
        if: env.SKIP_CI != 'true'
        with:
          java-version: 8
      - name: Build with Maven
        if: env.SKIP_CI != 'true'
        run: ./mvnw -B clean install
      - uses: codecov/codecov-action@v1
        if: env.SKIP_CI != 'true'
#      - build 特定plugin docker
      - name: Build plugin docker
        run: cd integrated-test/${{ runner.plugin}} && docker build -t xxx-${{runner.plugin}} .
      - name: Start docker-compose